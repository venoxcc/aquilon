local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local LoadingInstance = {
    ScreenGui = nil,
    Background = nil,
    LoadingBar = nil,
    StatusText = nil
}

-- Constants for styling
local COLORS = {
    BACKGROUND = Color3.fromRGB(12, 12, 12),
    TEXT_PRIMARY = Color3.fromRGB(255, 255, 255),
    TEXT_SECONDARY = Color3.fromRGB(180, 180, 180),
    ACCENT = Color3.fromRGB(200, 200, 200),
    LOADING_BAR_BG = Color3.fromRGB(40, 40, 40)
}

local function createLoadingUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "AquilonLoading"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.DisplayOrder = 999999999
    ScreenGui.IgnoreGuiInset = true
    ScreenGui.Parent = gethui() or CoreGui

    local Background = Instance.new("Frame")
    Background.Name = "Background"
    Background.Parent = ScreenGui
    Background.BackgroundColor3 = COLORS.BACKGROUND
    Background.BorderSizePixel = 0
    Background.Size = UDim2.new(1, 0, 1, 0)
    Background.BackgroundTransparency = 1

    -- Enhanced gradient overlay
    local GradientFrame = Instance.new("Frame")
    GradientFrame.Name = "GradientOverlay"
    GradientFrame.Parent = Background
    GradientFrame.BackgroundTransparency = 0.8
    GradientFrame.BorderSizePixel = 0
    GradientFrame.Size = UDim2.new(1, 0, 1, 0)

    local UIGradient = Instance.new("UIGradient")
    UIGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 15)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 25, 25)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
    })
    UIGradient.Parent = GradientFrame
    UIGradient.Rotation = 45

    -- Animated gradient
    spawn(function()
        local rotation = 45
        while GradientFrame.Parent do
            rotation = rotation + 0.5
            if rotation >= 360 then rotation = 0 end
            UIGradient.Rotation = rotation
            wait()
        end
    end)

    local Container = Instance.new("Frame")
    Container.Name = "Container"
    Container.Parent = Background
    Container.AnchorPoint = Vector2.new(0.5, 0.5)
    Container.Position = UDim2.new(0.5, 0, 0.5, 0)
    Container.Size = UDim2.new(1, 0, 0, 300)
    Container.BackgroundTransparency = 1

    -- Enhanced icon container with glow effect
    local IconContainer = Instance.new("Frame")
    IconContainer.Name = "IconContainer"
    IconContainer.Parent = Container
    IconContainer.BackgroundTransparency = 1
    IconContainer.Position = UDim2.new(0.5, 0, 0, 0)
    IconContainer.AnchorPoint = Vector2.new(0.5, 0)
    IconContainer.Size = UDim2.new(0, 90, 0, 90)

    local IconGlow = Instance.new("ImageLabel")
    IconGlow.Name = "Glow"
    IconGlow.Parent = IconContainer
    IconGlow.BackgroundTransparency = 1
    IconGlow.Size = UDim2.new(1.5, 0, 1.5, 0)
    IconGlow.Position = UDim2.new(0.5, 0, 0.5, 0)
    IconGlow.AnchorPoint = Vector2.new(0.5, 0.5)
    IconGlow.Image = "rbxassetid://7972073243"
    IconGlow.ImageColor3 = COLORS.ACCENT
    IconGlow.ImageTransparency = 0.8

    local Icon = Instance.new("ImageLabel")
    Icon.Name = "Icon"
    Icon.Parent = IconContainer
    Icon.BackgroundTransparency = 1
    Icon.Size = UDim2.new(1, 0, 1, 0)
    if getcustomasset then
    Icon.Image = getcustomasset("https://cdn-icons-png.flaticon.com/512/2815/2815428.png")
    else
        Icon.Image = ""
    end
    Icon.ImageColor3 = COLORS.ACCENT
    Icon.ImageTransparency = 1

    -- Enhanced icon animation
    spawn(function()
        while Icon.Parent do
            TweenService:Create(Icon, 
                TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), 
                {Rotation = 5}
            ):Play()
            TweenService:Create(IconGlow,
                TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                {ImageTransparency = 0.7}
            ):Play()
            wait(2)
            TweenService:Create(Icon, 
                TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), 
                {Rotation = -5}
            ):Play()
            TweenService:Create(IconGlow,
                TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                {ImageTransparency = 0.9}
            ):Play()
            wait(2)
        end
    end)

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = Container
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0.5, 0, 0, 100)
    Title.AnchorPoint = Vector2.new(0.5, 0)
    Title.Size = UDim2.new(0, 300, 0, 40)
    Title.Font = Enum.Font.GothamBlack
    Title.Text = "AQUILON"
    Title.TextColor3 = COLORS.TEXT_PRIMARY
    Title.TextSize = 36
    Title.TextTransparency = 1

    -- New credits text
    local Credits = Instance.new("TextLabel")
    Credits.Name = "Credits"
    Credits.Parent = Container
    Credits.BackgroundTransparency = 1
    Credits.Position = UDim2.new(0.5, 0, 0, 140)
    Credits.AnchorPoint = Vector2.new(0.5, 0)
    Credits.Size = UDim2.new(0, 300, 0, 20)
    Credits.Font = Enum.Font.Gotham
    Credits.RichText = true
    Credits.Text = "by <b>venox.w</b>"
    Credits.TextColor3 = COLORS.TEXT_SECONDARY
    Credits.TextSize = 14
    Credits.TextTransparency = 1

    local Underline = Instance.new("Frame")
    Underline.Name = "Underline"
    Underline.Parent = Container
    Underline.AnchorPoint = Vector2.new(0.5, 0)
    Underline.Position = UDim2.new(0.5, 0, 0, 170)
    Underline.Size = UDim2.new(0, 50, 0, 2)
    Underline.BorderSizePixel = 0
    Underline.BackgroundColor3 = COLORS.ACCENT
    Underline.BackgroundTransparency = 1

    -- Enhanced loading bar with rounded corners
    local LoadingBarContainer = Instance.new("Frame")
    LoadingBarContainer.Name = "LoadingBarContainer"
    LoadingBarContainer.Parent = Container
    LoadingBarContainer.AnchorPoint = Vector2.new(0.5, 0)
    LoadingBarContainer.Position = UDim2.new(0.5, 0, 0, 195)
    LoadingBarContainer.Size = UDim2.new(0, 300, 0, 6)
    LoadingBarContainer.BackgroundColor3 = COLORS.LOADING_BAR_BG
    LoadingBarContainer.BorderSizePixel = 0
    LoadingBarContainer.BackgroundTransparency = 1

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(1, 0)
    UICorner.Parent = LoadingBarContainer

    local LoadingBar = Instance.new("Frame")
    LoadingBar.Name = "LoadingBar"
    LoadingBar.Parent = LoadingBarContainer
    LoadingBar.Size = UDim2.new(0, 0, 1, 0)
    LoadingBar.BorderSizePixel = 0
    LoadingBar.BackgroundColor3 = COLORS.ACCENT
    LoadingBar.BackgroundTransparency = 1

    local LoadingBarCorner = Instance.new("UICorner")
    LoadingBarCorner.CornerRadius = UDim.new(1, 0)
    LoadingBarCorner.Parent = LoadingBar

    local StatusText = Instance.new("TextLabel")
    StatusText.Name = "Status"
    StatusText.Parent = Container
    StatusText.BackgroundTransparency = 1
    StatusText.Position = UDim2.new(0.5, 0, 0, 215)
    StatusText.AnchorPoint = Vector2.new(0.5, 0)
    StatusText.Size = UDim2.new(0, 300, 0, 30)
    StatusText.Font = Enum.Font.Gotham
    StatusText.Text = "Initializing..."
    StatusText.TextColor3 = COLORS.TEXT_SECONDARY
    StatusText.TextSize = 16
    StatusText.TextTransparency = 1

    -- Version text in bottom right
    local Version = Instance.new("TextLabel")
    Version.Name = "Version"
    Version.Parent = Background
    Version.BackgroundTransparency = 1
    Version.Position = UDim2.new(1, -20, 1, -20)
    Version.AnchorPoint = Vector2.new(1, 1)
    Version.Size = UDim2.new(0, 100, 0, 20)
    Version.Font = Enum.Font.Gotham
    Version.Text = "v1.0.0"
    Version.TextColor3 = COLORS.TEXT_SECONDARY
    Version.TextSize = 14
    Version.TextTransparency = 1
    Version.TextXAlignment = Enum.TextXAlignment.Right

    return {
        ScreenGui = ScreenGui,
        Background = Background,
        LoadingBar = LoadingBar,
        StatusText = StatusText,
        Icon = Icon,
        IconGlow = IconGlow,
        Title = Title,
        Credits = Credits,
        Underline = Underline,
        LoadingBarContainer = LoadingBarContainer,
        Version = Version
    }
end

local function fadeInLoadingScreen(elements)
    -- Fade in background with slight delay
    wait(0.2)
    TweenService:Create(elements.Background,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {BackgroundTransparency = 0}
    ):Play()

    -- Fade in elements with cascading effect
    wait(0.3)
    
    -- Icon and glow
    TweenService:Create(elements.Icon,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {ImageTransparency = 0}
    ):Play()
    
    TweenService:Create(elements.IconGlow,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {ImageTransparency = 0.8}
    ):Play()

    wait(0.1)
    
    -- Title and credits
    TweenService:Create(elements.Title,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {TextTransparency = 0}
    ):Play()
    
    wait(0.1)
    
    TweenService:Create(elements.Credits,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {TextTransparency = 0}
    ):Play()

    -- Animate underline with delay
    wait(0.2)
    elements.Underline.BackgroundTransparency = 0
    TweenService:Create(elements.Underline,
        TweenInfo.new(0.8, Enum.EasingStyle.Quad),
        {Size = UDim2.new(0, 200, 0, 2)}
    ):Play()

    -- Loading bar and status
    wait(0.1)
    TweenService:Create(elements.LoadingBarContainer,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {BackgroundTransparency = 0}
    ):Play()
    
    TweenService:Create(elements.LoadingBar,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {BackgroundTransparency = 0}
    ):Play()
    
    TweenService:Create(elements.StatusText,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {TextTransparency = 0}
    ):Play()

    -- Version text
    wait(0.1)
    TweenService:Create(elements.Version,
        TweenInfo.new(0.7, Enum.EasingStyle.Quad),
        {TextTransparency = 0}
    ):Play()
end

local function fadeOutLoadingScreen(elements)
    -- Fade out all elements with cascading effect
    TweenService:Create(elements.LoadingBar,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {BackgroundTransparency = 1}
    ):Play()
    
    TweenService:Create(elements.StatusText,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {TextTransparency = 1}
    ):Play()

    wait(0.1)

    TweenService:Create(elements.Underline,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {BackgroundTransparency = 1}
    ):Play()

    TweenService:Create(elements.Credits,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {TextTransparency = 1}
    ):Play()

    wait(0.1)

    TweenService:Create(elements.Title,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {TextTransparency = 1}
    ):Play()

    TweenService:Create(elements.Icon,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {ImageTransparency = 1}
    ):Play()

    TweenService:Create(elements.IconGlow,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {ImageTransparency = 1}
    ):Play()

    TweenService:Create(elements.Version,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {TextTransparency = 1}
    ):Play()

    wait(0.2)

    TweenService:Create(elements.Background,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
        {BackgroundTransparency = 1}
    ):Play()

    wait(0.7)
    elements.ScreenGui:Destroy()
end

-- Enhanced loading progress function with smoother animations
local function updateLoadingProgress(elements, progress, status)
    -- Animate loading bar with smoother easing
    TweenService:Create(elements.LoadingBar,
        TweenInfo.new(0.6, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
        {Size = UDim2.new(progress, 0, 1, 0)}
    ):Play()
    
    if status then
        -- Fade out current status
        TweenService:Create(elements.StatusText,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad),
            {TextTransparency = 1}
        ):Play()
        
        wait(0.3)
        
        -- Update text and fade in
        elements.StatusText.Text = status
        TweenService:Create(elements.StatusText,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad),
            {TextTransparency = 0}
        ):Play()
    end
end

-- Function to set version number
local function setVersion(elements, version)
    elements.Version.Text = "v" .. version
end

-- Export the enhanced loading screen functions
return {
    createLoader = function()
        LoadingInstance = createLoadingUI()
        return {
            show = function()
                fadeInLoadingScreen(LoadingInstance)
            end,
            setProgress = function(progress, status)
                updateLoadingProgress(LoadingInstance, progress, status)
            end,
            hide = function()
                fadeOutLoadingScreen(LoadingInstance)
            end,
            setVersion = function(version)
                setVersion(LoadingInstance, version)
            end
        }
    end
}
